import pandas as pd
from giskard import Dataset, Model, scan
from loguru import logger

from blueprint.chatbot import Chatbot
from blueprint.settings import (IPCC_REPORT_URL, OUTPUT_FOLDER,
                                PROMPT_TEMPLATE, SAMPLE_QA_PATH)


def create_dataset():
    df = pd.read_csv(SAMPLE_QA_PATH)

    wrapped_dataset = Dataset(name="Test Data Set", df=df, target="expected_answer")

    return wrapped_dataset


def create_mini_dataset():
    examples = [
        "Is sea level rise avoidable? When will it stop?",
    ]
    mini_dataset = Dataset(pd.DataFrame({"question": examples}), target=None)

    return mini_dataset


if __name__ == "__main__":
    bot = Chatbot(
        pdf=IPCC_REPORT_URL,
        prompt_template=PROMPT_TEMPLATE,
        local=False,
        output_folder=OUTPUT_FOLDER,
    )
    giskard_model = Model(
        model=bot.predict,
        model_type="text_generation",
        name="Climate Change Question Answering",
        description="This model answers any question about climate change based on IPCC reports",
        feature_names=["question"],
    )

    giskard_dataset = create_mini_dataset()

    # Testing it works...
    # answers = giskard_model.predict(giskard_dataset).prediction
    # logger.info([f"\n{q}: {a}" for q, a in zip(examples, answers)])

    # full_report = scan(giskard_model, giskard_dataset, only="hallucination")

    html_path = OUTPUT_FOLDER / "scan_report.html"
    logger.info(f"Will export to {html_path}")

    full_report = scan(giskard_model, giskard_dataset)

    html = full_report.to_html(filename=html_path, embed=True)
    logger.info(f"Exported to {html_path}")

    json_path = OUTPUT_FOLDER / "scan_report.json"
    json_report = full_report.to_json(filename=json_path)
    logger.info(f"Exported to {json_path}")

    md_path = OUTPUT_FOLDER / "scan_report.md"
    md_report = full_report.to_markdown(filename=md_path, template="huggingface")
    logger.info(f"Exported to {md_path}")

    """## Generate comprehensive test suites automatically for your model
    The objects produced by the scan can be used as fixtures to generate a test suite
    that integrates all detected vulnerabilities. Test suites allow you to evaluate
    and validate your model's performance, ensuring that it behaves as expected on a
    set of predefined test cases, and to identify any regressions or issues that might
    arise during development or updates.
    """

    # test_suite = full_report.generate_test_suite(name="Test suite generated by scan")
    # test_suite.run()
